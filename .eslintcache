[{"/Applications/MAMP/htdocs/React/eth-wallet/src/App.js":"1","/Applications/MAMP/htdocs/React/eth-wallet/src/index.js":"2","/Applications/MAMP/htdocs/React/eth-wallet/src/reportWebVitals.js":"3","/Applications/MAMP/htdocs/React/eth-wallet/src/network/sendToken.js":"4","/Applications/MAMP/htdocs/React/eth-wallet/src/network/getNetworkId.js":"5","/Applications/MAMP/htdocs/React/eth-wallet/src/network/getAccount.js":"6","/Applications/MAMP/htdocs/React/eth-wallet/src/network/getContract.js":"7","/Applications/MAMP/htdocs/React/eth-wallet/src/network/getWeb3.js":"8","/Applications/MAMP/htdocs/React/eth-wallet/src/components/login.jsx":"9","/Applications/MAMP/htdocs/React/eth-wallet/src/components/dashboard.jsx":"10","/Applications/MAMP/htdocs/React/eth-wallet/src/utils/utils.js":"11","/Applications/MAMP/htdocs/React/eth-wallet/src/network/getBalance.js":"12","/Applications/MAMP/htdocs/React/eth-wallet/src/components/getBalance.jsx":"13","/Applications/MAMP/htdocs/React/eth-wallet/src/components/faucet.jsx":"14","/Applications/MAMP/htdocs/React/eth-wallet/src/network/mint.js":"15","/Applications/MAMP/htdocs/React/eth-wallet/src/network/createAccount.js":"16","/Applications/MAMP/htdocs/React/eth-wallet/src/components/logout.jsx":"17","/Applications/MAMP/htdocs/React/eth-wallet/src/components/navbar.jsx":"18","/Applications/MAMP/htdocs/React/eth-wallet/src/components/loader.jsx":"19"},{"size":1116,"mtime":1608155855372,"results":"20","hashOfConfig":"21"},{"size":593,"mtime":1608154039757,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1607882939610,"results":"23","hashOfConfig":"21"},{"size":1116,"mtime":1608156570011,"results":"24","hashOfConfig":"21"},{"size":136,"mtime":1607892772208,"results":"25","hashOfConfig":"21"},{"size":286,"mtime":1608059496986,"results":"26","hashOfConfig":"21"},{"size":335,"mtime":1608127041773,"results":"27","hashOfConfig":"21"},{"size":283,"mtime":1608127022162,"results":"28","hashOfConfig":"21"},{"size":2372,"mtime":1608158074290,"results":"29","hashOfConfig":"21"},{"size":4239,"mtime":1608157491102,"results":"30","hashOfConfig":"21"},{"size":618,"mtime":1608151481132,"results":"31","hashOfConfig":"21"},{"size":357,"mtime":1608157273211,"results":"32","hashOfConfig":"21"},{"size":1751,"mtime":1608156758184,"results":"33","hashOfConfig":"21"},{"size":2608,"mtime":1608157031896,"results":"34","hashOfConfig":"21"},{"size":1112,"mtime":1608195169282,"results":"35","hashOfConfig":"21"},{"size":391,"mtime":1608149098223,"results":"36","hashOfConfig":"21"},{"size":257,"mtime":1608156168769,"results":"37","hashOfConfig":"21"},{"size":1181,"mtime":1608156064178,"results":"38","hashOfConfig":"21"},{"size":119,"mtime":1608157554419,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"i6nhie",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Applications/MAMP/htdocs/React/eth-wallet/src/App.js",[],["85","86"],"/Applications/MAMP/htdocs/React/eth-wallet/src/index.js",[],["87","88"],"/Applications/MAMP/htdocs/React/eth-wallet/src/reportWebVitals.js",[],["89","90"],"/Applications/MAMP/htdocs/React/eth-wallet/src/network/sendToken.js",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/network/getNetworkId.js",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/network/getAccount.js",[],["91","92"],"/Applications/MAMP/htdocs/React/eth-wallet/src/network/getContract.js",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/network/getWeb3.js",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/components/login.jsx",["93"],"import React, { useCallback, useState, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { setLocalStorage, getLocalStorage } from '../utils/utils';\nimport createAccount from '../network/createAccount';\nimport bcrypt from 'bcryptjs';\nimport Loader from './loader';\n\nconst Login = () => {\n  const [credential, setCredential] = useState({ email: '', password: '' });\n  const [loading, setLoading] = useState(false);\n\n  const handleOnChange = useCallback(\n    ({ target: input }) => {\n      const data = { ...credential };\n      data[input.name] = input.value;\n      setCredential(data);\n    },\n    [credential]\n  );\n\n  const handleSubmit = useCallback(async () => {\n    setLoading(true);\n    const salt = await bcrypt.genSalt(5);\n    const hashedPassword = await bcrypt.hash(credential.password, salt);\n\n    const accountInfo = createAccount();\n    setLoading(false);\n\n    setLocalStorage({ key: 'password', value: hashedPassword });\n    setLocalStorage({ key: 'account', value: accountInfo });\n    window.location = '/dashboard';\n  }, [credential]);\n\n  if (getLocalStorage({ key: 'account' }) !== null) return <Redirect to=\"/dashboard\" />;\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-center\">Create a wallet</h1>\n          <Form>\n            <FormGroup>\n              <Label for=\"exampleEmail\">Email</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"email\"\n                name=\"email\"\n                id=\"exampleEmail\"\n                value={credential['email']}\n                required\n                placeholder=\"example@domain.com\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                onChange={handleOnChange}\n                name=\"password\"\n                id=\"examplePassword\"\n                value={credential['password']}\n                required\n                placeholder=\"your secure password\"\n              />\n            </FormGroup>\n            <Button onClick={handleSubmit}>{loading ? <Loader /> : 'Submit'}</Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","/Applications/MAMP/htdocs/React/eth-wallet/src/components/dashboard.jsx",["94"],"/Applications/MAMP/htdocs/React/eth-wallet/src/utils/utils.js",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/network/getBalance.js",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/components/getBalance.jsx",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/components/faucet.jsx",["95"],"import React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\nimport mint from '../network/mint';\nimport getBalance from '../network/getBalance';\nimport Loader from './loader';\n\nconst Mint = () => {\n  const [formData, setFormData] = useState({\n    address: '',\n    amount: '',\n  });\n\n  const [balance, setBalance] = useState(null);\n  const [disableButton, setDisableButton] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const handleOnChange = useCallback(\n    ({ target: input }) => {\n      const newFormData = { ...formData };\n      const key = input.name;\n      newFormData[key] = input.value;\n\n      setFormData(newFormData);\n    },\n    [formData]\n  );\n\n  const handleOnSubmit = useCallback(async () => {\n    setLoading(true);\n    setBalance(null);\n\n    const result = await mint(formData.address, formData.amount);\n\n    const balance = await getBalance(formData.address);\n    setBalance(balance);\n    setLoading(false);\n  }, [formData]);\n\n  useEffect(() => {\n    if (formData.address && formData.amount) setDisableButton(false);\n    else setDisableButton(true);\n  }, [formData]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3 className=\"text-center\">Get Some TDS Token</h3>\n\n          <Form>\n            <FormGroup>\n              <Label for=\"address\">Address</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"text\"\n                name=\"address\"\n                id=\"address\"\n                value={formData['address']}\n                required\n                placeholder=\"Address\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"amount\">Amount</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"number\"\n                name=\"amount\"\n                id=\"amount\"\n                value={formData['amount']}\n                required\n                placeholder=\"amount\"\n              />\n            </FormGroup>\n\n            <Button disabled={disableButton} color=\"primary\" onClick={handleOnSubmit}>\n              {loading ? <Loader /> : 'Submit'}\n            </Button>\n          </Form>\n          {balance === null ? (\n            ''\n          ) : (\n            <p>\n              The balance of <span className=\"font-weight-bold\">{formData.address}</span> is{' '}\n              <span className=\"font-weight-bold\">{balance}</span> TDS\n            </p>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Mint;\n","/Applications/MAMP/htdocs/React/eth-wallet/src/network/mint.js",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/network/createAccount.js",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/components/logout.jsx",["96","97"],"import React from 'react';\nimport { removeLocalStorage } from '../utils/utils';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = () => {\n  removeLocalStorage({ key: 'account' });\n  return (window.location = '/login');\n};\n\nexport default Logout;\n","/Applications/MAMP/htdocs/React/eth-wallet/src/components/navbar.jsx",[],"/Applications/MAMP/htdocs/React/eth-wallet/src/components/loader.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"98","replacedBy":"104"},{"ruleId":"100","replacedBy":"105"},{"ruleId":"98","replacedBy":"106"},{"ruleId":"100","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":40,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"112","severity":1,"message":"113","line":39,"column":6,"nodeType":"114","endLine":39,"endColumn":8,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":32,"column":11,"nodeType":"110","messageId":"111","endLine":32,"endColumn":17},{"ruleId":"108","severity":1,"message":"117","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"118","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":18},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],["119"],["120"],["119"],["120"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAccountBalance' and 'wallet'. Either include them or remove the dependency array.","ArrayExpression",["121"],"'result' is assigned a value but never used.","'React' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [getAccountBalance, wallet]",{"range":"124","text":"125"},[1185,1187],"[getAccountBalance, wallet]"]