{"version":3,"sources":["utils/utils.js","network/createAccount.js","components/loader.jsx","components/login.jsx","network/getWeb3.js","network/getContract.js","network/getBalance.js","network/sendToken.js","components/dashboard.jsx","components/getBalance.jsx","network/mint.js","components/faucet.jsx","components/logout.jsx","components/navbar.jsx","components/notFound.jsx","App.js","reportWebVitals.js","index.js"],"names":["bigNumber","require","exports","setLocalStorage","key","value","jsonValue","JSON","stringify","localStorage","setItem","getLocalStorage","result","getItem","parse","removeLocalStorage","removeItem","getMultipliedByDecimalBN","amount","decimals","multiply","Math","pow","getDividedOnDecimal","trunc","ethers","createAccount","userMnemonic","Wallet","createRandom","mnemonic","userWallet","fromMnemonic","phrase","address","publicKey","privateKey","Loader","className","Login","useState","email","password","credential","setCredential","loading","setLoading","handleOnChange","useCallback","input","target","data","name","handleSubmit","a","bcrypt","genSalt","salt","hash","hashedPassword","accountInfo","window","location","to","Container","Row","Col","Form","FormGroup","Label","for","Input","onChange","type","id","required","placeholder","Button","onClick","getWeb3","providerUrl","Web3","providers","HttpProvider","web3","setProvider","getContract","abi","contracFile","process","eth","Contract","TDS","getBalance","methods","balanceOf","call","balance","sendToken","amountBN","net","getId","chainId","getTransactionCount","nonce","transfer","encodeABI","estimateGas","from","tx","gas","accounts","signTransaction","signed","sendSignedTransaction","rawTransaction","receipt","Dashboard","wallet","setWallet","setBalance","transactionHash","setTransactionHash","disableButton","setDisableButton","receiver","formData","setFormData","useEffect","newWallet","getAccountBalance","currentBalance","newFormData","handleOnSubmit","color","disabled","href","ShowBalance","setAddress","length","mint","account","Mint","Logout","Navigation","props","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavbarText","NotFound","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b8215e9.chunk.js","sourcesContent":["const bigNumber = require('big-number');\n\nexports.setLocalStorage = ({ key, value }) => {\n  const jsonValue = JSON.stringify(value);\n  localStorage.setItem(key, jsonValue);\n};\n\nexports.getLocalStorage = ({ key }) => {\n  const result = localStorage.getItem(key);\n\n  return JSON.parse(result);\n};\n\nexports.removeLocalStorage = ({ key }) => {\n  localStorage.removeItem(key);\n};\n\nexports.getMultipliedByDecimalBN = ({ amount, decimals }) => {\n  return bigNumber(amount).multiply(Math.pow(10, decimals));\n};\nexports.getDividedOnDecimal = ({ amount, decimals }) => {\n  return Math.trunc(amount / Math.pow(10, decimals));\n};\n","const ethers = require('ethers');\n\nconst createAccount = () => {\n  const userMnemonic = ethers.Wallet.createRandom().mnemonic;\n  const userWallet = ethers.Wallet.fromMnemonic(userMnemonic.phrase);\n  return {\n    mnemonic: userMnemonic.phrase,\n    address: userWallet.address,\n    publicKey: userWallet.publicKey,\n    privateKey: userWallet.privateKey,\n  };\n};\n\nexport default createAccount;\n","import React from 'react';\n\nconst Loader = () => {\n  return <div className=\"loader\"></div>;\n};\n\nexport default Loader;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { setLocalStorage, getLocalStorage } from '../utils/utils';\nimport createAccount from '../network/createAccount';\nimport bcrypt from 'bcryptjs';\nimport Loader from './loader';\n\nconst Login = () => {\n  const [credential, setCredential] = useState({ email: '', password: '' });\n  const [loading, setLoading] = useState(false);\n\n  const handleOnChange = useCallback(\n    ({ target: input }) => {\n      const data = { ...credential };\n      data[input.name] = input.value;\n      setCredential(data);\n    },\n    [credential]\n  );\n\n  const handleSubmit = useCallback(async () => {\n    setLoading(true);\n    const salt = await bcrypt.genSalt(5);\n    const hashedPassword = await bcrypt.hash(credential.password, salt);\n\n    const accountInfo = createAccount();\n    setLoading(false);\n\n    setLocalStorage({ key: 'password', value: hashedPassword });\n    setLocalStorage({ key: 'account', value: accountInfo });\n    window.location = '/dashboard';\n  }, [credential]);\n\n  if (getLocalStorage({ key: 'account' }) !== null) return <Redirect to=\"/dashboard\" />;\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-center\">Create a wallet</h1>\n          <Form>\n            <FormGroup>\n              <Label for=\"exampleEmail\">Email</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"email\"\n                name=\"email\"\n                id=\"exampleEmail\"\n                value={credential['email']}\n                required\n                placeholder=\"example@domain.com\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                onChange={handleOnChange}\n                name=\"password\"\n                id=\"examplePassword\"\n                value={credential['password']}\n                required\n                placeholder=\"your secure password\"\n              />\n            </FormGroup>\n            <Button onClick={handleSubmit}>{loading ? <Loader /> : 'Submit'}</Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","import Web3 from 'web3';\n\nconst getWeb3 = () => {\n  const providerUrl = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/e739a44f28464e40aa066b903189dae4');\n\n  const web3 = new Web3('http://');\n  web3.setProvider(providerUrl);\n\n  return web3;\n};\nexport default getWeb3;\n","import getWeb3 from './getWeb3';\nimport contracFile from '../abi/TDS.json';\n\nconst getContract = async () => {\n  const web3 = getWeb3();\n\n  const abi = contracFile.abi;\n  const address = process.env.REACT_APP_TDS_CONTRACT_ADDRESS;\n\n  const TDS = await new web3.eth.Contract(abi, address);\n\n  return TDS;\n};\nexport default getContract;\n","import getContract from './getContract';\n\nconst getBalance = async (address) => {\n  const TDS = await getContract();\n  try {\n    const balance = await TDS.methods.balanceOf(address).call();\n    const decimals = await TDS.methods.decimals().call();\n    return Math.trunc(balance / Math.pow(10, decimals));\n  } catch (error) {}\n};\n\nexport default getBalance;\n","import getWeb3 from './getWeb3';\nimport getContract from './getContract';\nimport { getMultipliedByDecimalBN, getLocalStorage } from '../utils/utils';\n\nconst sendToken = async (to, amount) => {\n  const web3 = getWeb3();\n  const TDS = await getContract();\n\n  const decimals = await TDS.methods.decimals().call();\n  const amountBN = getMultipliedByDecimalBN({ amount, decimals });\n  const accountInfo = getLocalStorage({ key: 'account' });\n  if (accountInfo === null) return;\n\n  const chainId = await web3.eth.net.getId();\n\n  try {\n    const nonce = await web3.eth.getTransactionCount(accountInfo.address);\n\n    const data = TDS.methods.transfer(to, amountBN);\n\n    const tx = {\n      nonce,\n      to: process.env.REACT_APP_TDS_CONTRACT_ADDRESS,\n      chainId,\n      data: data.encodeABI(),\n      gas: await data.estimateGas({ from: accountInfo.address }),\n    };\n\n    const signed = await web3.eth.accounts.signTransaction(tx, accountInfo.privateKey);\n\n    const receipt = await web3.eth.sendSignedTransaction(signed.rawTransaction);\n\n    return receipt;\n  } catch (error) {}\n};\n\nexport default sendToken;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\nimport getBalance from '../network/getBalance';\nimport sendToken from '../network/sendToken';\nimport Loader from './loader';\nimport { getLocalStorage } from '../utils/utils';\nimport { Redirect } from 'react-router-dom';\n\nconst Dashboard = () => {\n  //* User wallet\n  const [wallet, setWallet] = useState({\n    mnemonic: '',\n    address: '',\n    privateKey: '',\n  });\n  //* TDS token balance State\n  const [balance, setBalance] = useState(0);\n\n  //* The Hash of Transaction of sending token\n  const [transactionHash, setTransactionHash] = useState(null);\n\n  //* Loader on submit\n  const [loading, setLoading] = useState(false);\n\n  //* Disable button if form inputs are not valid\n  const [disableButton, setDisableButton] = useState(true);\n\n  //* Form data\n  const [formData, setFormData] = useState({\n    amount: '',\n    receiver: '',\n  });\n\n  useEffect(() => {\n    //* Store wallet information is localstorage (not secure)\n    const newWallet = { ...wallet };\n\n    const accountInfo = getLocalStorage({ key: 'account' });\n\n    if (accountInfo === null) return;\n\n    newWallet.mnemonic = accountInfo.mnemonic;\n    newWallet.address = accountInfo.address;\n    newWallet.privateKey = accountInfo.privateKey;\n\n    setWallet(newWallet);\n\n    //* Update the current TDS token balance\n    getAccountBalance(newWallet.address);\n  }, []);\n\n  //* Get the TDS token balance\n  const getAccountBalance = useCallback(async (address) => {\n    const currentBalance = await getBalance(address);\n\n    setBalance(currentBalance);\n  }, []);\n\n  //* Update the value of form inputs\n  const handleOnChange = useCallback(\n    ({ target: input }) => {\n      const newFormData = { ...formData };\n      const key = input.name;\n      newFormData[key] = input.value;\n      setFormData(newFormData);\n    },\n    [formData]\n  );\n\n  //* Sending transaction on submit\n  const handleOnSubmit = useCallback(async () => {\n    setLoading(true);\n    const result = await sendToken(formData.receiver, formData.amount);\n    if (result && result.transactionHash) setTransactionHash(result.transactionHash);\n    setLoading(false);\n  }, [formData]);\n\n  useEffect(() => {\n    if (formData.amount && formData.receiver) setDisableButton(false);\n    else setDisableButton(true);\n  }, [formData]);\n\n  if (getLocalStorage({ key: 'account' }) === null) return <Redirect to=\"/login\" />;\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"col-12\">\n          <div className=\"text-center\">\n            <p>\n              <span className=\"font-weight-bold\">Your mnemonic: </span>\n              {wallet.mnemonic}\n            </p>\n            <p>\n              <span className=\"font-weight-bold\">Your private key: </span>\n\n              {wallet.privateKey}\n            </p>\n            <p>\n              <span className=\"font-weight-bold\">Your address: </span>\n              {wallet.address}\n            </p>\n            <hr />\n\n            <p>\n              <span className=\"font-weight-bold\">Your current TDS balance: </span>\n              {balance}\n            </p>\n            <hr />\n          </div>\n        </Col>\n        <Col className=\"col-12\">\n          <h3 className=\"text-center\">Send TDS Token</h3>\n          <Form>\n            <FormGroup>\n              <Label for=\"amount\">Amount</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"number\"\n                name=\"amount\"\n                id=\"amount\"\n                value={formData['amount']}\n                required\n                placeholder=\"Amount of TDS Token\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"receiver\">Reciver</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"text\"\n                name=\"receiver\"\n                id=\"receiver\"\n                value={formData['receiver']}\n                required\n                placeholder=\"0x0000000000000000000000000000000000000000\"\n              />\n            </FormGroup>\n            <Button color=\"primary\" disabled={disableButton} onClick={handleOnSubmit}>\n              {loading ? <Loader /> : 'Submit'}\n            </Button>\n          </Form>\n          {transactionHash ? (\n            <p className=\"font-weight-bold\">\n              Success, click <a href={`https://rinkeby.etherscan.io/tx/${transactionHash}`}>here</a> for details\n            </p>\n          ) : (\n            ''\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\nimport getBalance from '../network/getBalance';\n\nconst ShowBalance = () => {\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState(null);\n  const [disableButton, setDisableButton] = useState(true);\n\n  const handleOnChange = useCallback(({ target: input }) => {\n    setAddress(input.value);\n  }, []);\n\n  const handleOnSubmit = useCallback(async () => {\n    const balance = await getBalance(address);\n    setBalance(balance);\n  }, [address]);\n\n  useEffect(() => {\n    if (address.length) setDisableButton(false);\n    else setDisableButton(true);\n  }, [address]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3 className=\"text-center\">Get TDS Blanace of Account</h3>\n          <Form>\n            <FormGroup>\n              <Label for=\"address\">Address</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"text\"\n                name=\"address\"\n                id=\"address\"\n                value={address}\n                required\n                placeholder=\"Address\"\n              />\n            </FormGroup>\n\n            <Button disabled={disableButton} color=\"primary\" onClick={handleOnSubmit}>\n              Submit\n            </Button>\n          </Form>\n          {balance === null ? (\n            ''\n          ) : (\n            <p>\n              The balance of <span className=\"font-weight-bold\">{address}</span> is{' '}\n              <span className=\"font-weight-bold\">{balance}</span> TDS\n            </p>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ShowBalance;\n","import getContract from './getContract';\nimport getWeb3 from './getWeb3';\nimport { getMultipliedByDecimalBN, getLocalStorage } from '../utils/utils';\n\nconst mint = async (account, amount) => {\n  const web3 = getWeb3();\n  const TDS = await getContract();\n  const chainId = await web3.eth.net.getId();\n  const decimals = await TDS.methods.decimals().call();\n  const amountBN = getMultipliedByDecimalBN({ amount, decimals });\n  const accountInfo = getLocalStorage({ key: 'account' });\n  if (accountInfo === null) return;\n\n  try {\n    const data = TDS.methods.mint(account, amountBN);\n    const gas = await data.estimateGas({ from: accountInfo.address });\n    const nonce = await web3.eth.getTransactionCount(accountInfo.address);\n    const tx = {\n      nonce,\n      to: process.env.REACT_APP_TDS_CONTRACT_ADDRESS,\n      chainId,\n      data: data.encodeABI(),\n      gas,\n    };\n\n    const signed = await web3.eth.accounts.signTransaction(tx, accountInfo.privateKey);\n\n    const receipt = await web3.eth.sendSignedTransaction(signed.rawTransaction);\n\n    return receipt;\n  } catch (error) {}\n};\n\nexport default mint;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\nimport mint from '../network/mint';\nimport getBalance from '../network/getBalance';\nimport Loader from './loader';\n\nconst Mint = () => {\n  const [formData, setFormData] = useState({\n    address: '',\n    amount: '',\n  });\n\n  const [balance, setBalance] = useState(null);\n  const [disableButton, setDisableButton] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const handleOnChange = useCallback(\n    ({ target: input }) => {\n      const newFormData = { ...formData };\n      const key = input.name;\n      newFormData[key] = input.value;\n\n      setFormData(newFormData);\n    },\n    [formData]\n  );\n\n  const handleOnSubmit = useCallback(async () => {\n    setLoading(true);\n    setBalance(null);\n\n    const result = await mint(formData.address, formData.amount);\n\n    const balance = await getBalance(formData.address);\n    setBalance(balance);\n    setLoading(false);\n  }, [formData]);\n\n  useEffect(() => {\n    if (formData.address && formData.amount) setDisableButton(false);\n    else setDisableButton(true);\n  }, [formData]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3 className=\"text-center\">Get Some TDS Token</h3>\n\n          <Form>\n            <FormGroup>\n              <Label for=\"address\">Address</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"text\"\n                name=\"address\"\n                id=\"address\"\n                value={formData['address']}\n                required\n                placeholder=\"Address\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"amount\">Amount</Label>\n              <Input\n                onChange={handleOnChange}\n                type=\"number\"\n                name=\"amount\"\n                id=\"amount\"\n                value={formData['amount']}\n                required\n                placeholder=\"amount\"\n              />\n            </FormGroup>\n\n            <Button disabled={disableButton} color=\"primary\" onClick={handleOnSubmit}>\n              {loading ? <Loader /> : 'Submit'}\n            </Button>\n          </Form>\n          {balance === null ? (\n            ''\n          ) : (\n            <p>\n              The balance of <span className=\"font-weight-bold\">{formData.address}</span> is{' '}\n              <span className=\"font-weight-bold\">{balance}</span> TDS\n            </p>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Mint;\n","import React from 'react';\nimport { removeLocalStorage } from '../utils/utils';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = () => {\n  removeLocalStorage({ key: 'account' });\n  return (window.location = '/login');\n};\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavbarText } from 'reactstrap';\nimport { getLocalStorage } from '../utils/utils';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = (props) => {\n  const accountInfo = getLocalStorage({ key: 'account' });\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Wallet</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink to=\"/dashboard\">Dashboard</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/faucet\">Faucet</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/get-balance\">Get Balance</NavLink>\n            </NavItem>\n          </Nav>\n          <NavbarText>{accountInfo === null ? '' : <NavLink to=\"/logout\">Logout</NavLink>}</NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst NotFound = () => {\n  return <p>Not found - 404</p>;\n};\n\nexport default NotFound;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './components/login';\nimport Dashboard from './components/dashboard';\nimport ShowBalance from './components/getBalance';\nimport Mint from './components/faucet';\nimport Logout from './components/logout';\nimport Navigation from './components/navbar';\nimport NotFound from './components/notFound';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation></Navigation>\n      <main>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/logout\">\n            <Logout />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/faucet\">\n            <Mint />\n          </Route>\n          <Route path=\"/get-balance\">\n            <ShowBalance />\n          </Route>\n          <Route path=\"/not-found\">\n            <NotFound />\n          </Route>\n\n          <Redirect from=\"/\" to=\"/dashboard\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}